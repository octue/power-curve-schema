name: refresh-pr-notes-on-main-push

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write

jobs:
  prepare:
    name: Find open PRs targeting main
    runs-on: ubuntu-latest
    outputs:
      prs: ${{ steps.get-prs.outputs.prs }}
    steps:
      - name: List open PRs with base=main
        id: get-prs
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const prs = await github.paginate(github.rest.pulls.list, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              base: 'main',
              per_page: 100,
            });
            const items = prs.map(pr => ({ number: pr.number, url: pr.url }));
            core.info(`Found ${items.length} open PR(s) targeting main`);
            return JSON.stringify(items);

  update:
    name: Update PR autogenerated notes
    needs: prepare
    if: ${{ needs.prepare.outputs.prs != '[]' && needs.prepare.outputs.prs != '' }}
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        pr: ${{ fromJson(needs.prepare.outputs.prs) }}
    steps:
      - name: Get PR body
        id: get-body
        uses: actions/github-script@v7
        env:
          PR_NUMBER: ${{ matrix.pr.number }}
        with:
          result-encoding: string
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: Number(process.env.PR_NUMBER),
            });
            return pr.data.body || '';

      - name: Generate PR description
        if: ${{ !contains(steps.get-body.outputs.result, '<!--- SKIP AUTOGENERATED NOTES --->') }}
        id: pr-description
        uses: octue/generate-pull-request-description@1.0.0.beta-2
        with:
          pull_request_url: ${{ matrix.pr.url }}
          api_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update pull request body
        if: ${{ !contains(steps.get-body.outputs.result, '<!--- SKIP AUTOGENERATED NOTES --->') }}
        uses: riskledger/update-pr-description@v2
        with:
          body: ${{ steps.pr-description.outputs.pull_request_description }}
          token: ${{ secrets.GITHUB_TOKEN }}
